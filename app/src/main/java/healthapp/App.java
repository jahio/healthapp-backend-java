/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package healthapp;

import io.ebean.config.DatabaseConfig;
import io.ebean.config.JsonConfig;
import io.javalin.Javalin;
import io.javalin.core.JavalinConfig;
import io.javalin.core.util.RouteOverviewPlugin;
import io.javalin.http.util.RedirectToLowercasePathPlugin;

public class App {
    public static void main(String[] args) {
        // Set the port to env[PORT]
        Integer port = Integer.parseInt(System.getenv("PORT"));

        // Get our jdbc connection string from env as well
        String jdbcURL = System.getenv("JDBC_URL");

        // Attempt to create a config object, through which we'll connect to the
        // database. This is so much harder in Java than in pretty-much any other
        // language I've ever written code in. And that's saying something...
        DatabaseConfig dbcfg = new DatabaseConfig();
        dbcfg.setJsonInclude(JsonConfig.Include.ALL);
        dbcfg.setDataSource();

        // Configure HTTP server/app layer
        JavalinConfig cfg = new JavalinConfig();
        cfg.registerPlugin(new RouteOverviewPlugin(("/routes")));
        Javalin app = Javalin.create(config -> {
            config.registerPlugin(new RouteOverviewPlugin("/routes"));
            config.registerPlugin(new RedirectToLowercasePathPlugin());
        });
//
//        app.get("/", ctx -> {
//            ctx.json(app);
//        });



    }
}
