/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1/userguide/building_java_projects.html
 */

plugins {
    id 'application'
    id 'io.ebean' version '12.8.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // Lombok - projectlombok.org
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1-jre'

    // Spark
    // implementation "com.sparkjava:spark-core:2.9.3"

    // Exposed - JetBrains ORM
//    implementation 'org.jetbrains.exposed:exposed-core:0.32.1'
    implementation 'io.javalin:javalin-bundle:3.13.8'

//    implementation 'org.javalite:javalite:2.4-j8'

//    implementation 'org.javalite:javalite:2.5-j8'
//    implementation 'org.javalite:activejdbc:2.5-j8'
//    implementation 'org.javalite:activejdbc:3.0-j11'
//    implementation 'org.javalite:activejdbc-instrumentation:3.0-j11'



    // ebean (database orm)
    implementation 'io.ebean:ebean:12.8.0'
    implementation 'io.ebean:ebean-querybean:12.8.0'
    annotationProcessor 'io.ebean:querybean-generator:12.8.0'
    testImplementation 'io.ebean:ebean-test:12.8.0'
}

application {
    // Define the main class for the application.
    mainClass = 'healthapp.App'
}

compileJava {
    sourceCompatibility = '8'
    targetCompatibility = '8'
}

// Settings for database orm (ebean)
//ebean {
//    debugLevel = 0 // 0 - 9
//}

test {
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
}

//tasks.register('getconfig') {
//    logging.captureStandardOutput LogLevel.INFO
//    logging.captureStandardError LogLevel.INFO
//    doLast {
//        logger.info(Gradle.properties)
//        // Gradle.properties.each { k, v ->
//        //    println "${k} -> ${v}"
//        // }
//        // println System.properties.toString()
//        // println System.properties['system']
//    }
//}
