/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package io.jah.healthapp;

import io.jah.healthapp.query.QBP;
import io.ebean.Database;
import io.ebean.DatabaseFactory;
import io.ebean.config.DatabaseConfig;
import io.ebean.datasource.DataSourceConfig;
import io.javalin.Javalin;
import io.javalin.core.JavalinConfig;
import io.javalin.core.util.RouteOverviewPlugin;
import io.javalin.http.util.RedirectToLowercasePathPlugin;

import java.time.Instant;
import java.util.List;

public class App {
    public static void main(String[] args) {
        // Set the http port to env[PORT]
        Integer httpPort = Integer.parseInt(System.getenv("PORT"));

        // Attempt to create a config object, through which we'll connect to the
        // database. This is so much harder in Java than in pretty-much any other
        // language I've ever written code in. And that's saying something...
        DataSourceConfig dsc = new DataSourceConfig();
        dsc.setUsername(System.getenv("JDBC_USER"));
        dsc.setPassword(System.getenv("JDBC_PASSWORD"));
        dsc.setUrl(System.getenv("JDBC_URL"));
        dsc.setSchema("public");
        DatabaseConfig dbcfg = new DatabaseConfig();
        dbcfg.setDataSourceConfig(dsc);
        dbcfg.setName(System.getenv("JDBC_DBNAME"));
        dbcfg.addClass(BP.class); // TODO: Water when that's ready
        Database db = DatabaseFactory.create(dbcfg);

        // Configure HTTP server/app layer
        JavalinConfig cfg = new JavalinConfig();
        cfg.registerPlugin(new RouteOverviewPlugin(("/routes")));
        Javalin app = Javalin.create(config -> {
            config.registerPlugin(new RouteOverviewPlugin("/routes"));
            config.registerPlugin(new RedirectToLowercasePathPlugin());
            config.enableDevLogging();
//            config.server()
        });

        app.get("/", ctx -> {
            Instant now = Instant.now();
            Instant ago = now.minusSeconds(604800); // One week
            List<BP> bp = new QBP().whenCreated.between(ago, now).findList();
            ctx.json(bp);
        });

        app.start();

    }
}
